demos-w-analyser/k07/k07.ino: k_start(1); /* start krnl timer speed 1 milliseconds*/ demos-w-analyser/k05/k05.ino: k_start(1); /* start krnl timer speed 1 
milliseconds*/ demos-w-analyser/k09/k09.ino: k_start(1); /* start krnl timer speed 1 milliseconds*/ demos-w-analyser/k08/k08.ino: k_start(1); /* start krnl timer 
speed 1 milliseconds*/ demos-w-analyser/k02/k02.ino: k_start(1); /* start krnl timer speed 1 milliseconds*/ demos-w-analyser/k04/k04.ino: k_start(1); /* start krnl 
timer speed 1 milliseconds*/ demos-w-analyser/k11/k11.ino: sem2 = k_crt_sem(0, 0); // 1: start value, 10: max value (clipping)k_start(1); /* start krnl timer speed 1 
milliseconds*/ demos-w-analyser/k11/k11.ino: k_start(1); demos-w-analyser/k06/k06.ino: k_start(1); /* start krnl timer speed 1 milliseconds*/ 
demos-w-analyser/k10/k10.ino: sem2 = k_crt_sem(0, 0); // 1: start value, 10: max value (clipping)k_start(1); /* start krnl timer speed 1 milliseconds*/ 
demos-w-analyser/k10/k10.ino: k_start(1); demos-w-analyser/k03/k03.ino: k_start(1); /* start krnl timer speed 1 milliseconds*/ k01myfirsttask/k01myfirsttask.ino: res 
= k_start (1); // 1 milli sec tick speed ALWAYS Parameter is ignored k01myfirsttask/k01myfirsttask.ino: // you will never return from k_start 
k02twotasks/k02twotasks.ino:} // k_start call called from setup - USE 1 msec :-) k02twotasks/k02twotasks.ino: // tasks every 10 milli second (speed set in k_start) 
k02twotasks/k02twotasks.ino: k_start(1); // start kernel with tick speed 1 milli seconds k02twotasks/k02twotasks.ino: * } // k_start call called from setup - USE 1 
msec :-) k03asleep/k03asleep.ino: res = k_start(1); // 1 milli sec tick speed k03asleep/k03asleep.ino: // you will never return from k_start 
k03priorityequal/k03priorityequal.ino: res = k_start(1); // 1 milli sec tick speed k03priorityequal/k03priorityequal.ino: // you will never return from k_start 
k03priorityequalfixed/k03priorityequalfixed.ino: res = k_start(1); // 1 milli sec tick speed k03priorityequalfixed/k03priorityequalfixed.ino: // you will never return 
from k_start k04periodic/k04periodic.ino: err = k_start(1); // 1 milli sec tick speed k04periodic-clip/k04periodic-clip.ino: err = k_start(1); // 1 milli sec tick 
speed k04periodic-simple/k04periodic-simple.ino: res = k_start(1); // 1 milli sec tick speed k04periodic-simple/k04periodic-simple.ino: // you will never return from 
k_start k06syncsem/k06syncsem.ino: res = k_start(1); // 1 milli sec tick speed k06syncsem/k06syncsem.ino: // you will never return from k_start 
k07mutexsem/k07mutexsem.ino: res = k_start(1); // 1 milli sec tick speed k07mutexsem/k07mutexsem.ino: // you will never return from k_start 
k07mutexsem-adv/k07mutexsem-adv.ino: res = k_start(1); // 1 milli sec tick speed k07mutexsem-adv/k07mutexsem-adv.ino: // you will never return from k_start 
k08isrsem/k08isrsem.ino:k_start(1); /* start krnl timer speed 1 milliseconds*/ k09msgq/k09msgq.ino: Serial.println("just bef k_start"); k09msgq/k09msgq.ino: 
k_start(1); /* start krnl timer speed 1 milliseconds*/ krnldebugled13/krnldebugled13.ino: k_start(1); // 1 milli sec tick speed 
krnlsimpledebugled/krnlsimpledebugled.ino: k_start(1); // 1 milli sec tick speed
